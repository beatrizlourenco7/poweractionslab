name: release-solution-to-prod
# Reusable workflow
# convert solution to managed (using a build PowerPlatform environment for the conversion)
# upload the solution to the GitHub artifacts and deploy to the PROD environment
on:
  workflow_dispatch:
    inputs: 
      #Do Not change these values
      #Values are set by the caller
      #caller sample: release-action-call.ymnl
      solution_name:
        description: 'The solution name.'
        type: string
        default: ALMLab       
      solution_shipping_folder:
        description: 'folder name for staging the exported solution *do not change*'        
        type: string
        default: out/ship/
      solution_outbound_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        type: string
        default: out/solutions/
      solution_source_folder: 
       description: 'folder name to be created and checked in *do not change*'
       type: string
       default: solutions/
      solution_release_folder:
       description: 'folder where the released binaries are going to be hosted *do not change*'
       type: string
       default: out/release
      QA_ENVIRONMENT_URL:
        description: 'QA environment url.'
        type: string
        required: true
        default: 'https://orgd0a5070f.crm.dynamics.com/'
      PRODUCTION_ENVIRONMENT_URL: 
        description: 'Production environment url.'
        type: string
        required: true
        default: 'https://orga2bd4cb8.crm.dynamics.com/'

env:
  CLIENT_ID: 'c7485251-8ef9-4734-be4f-6e7359faef2a'
  TENANT_ID: '2ae11ddb-eeff-4ba6-8871-ebfc9f61160a'
  
jobs:
  release-to-qa:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@v0
      with:
        solution-folder: ${{ inputs.solution_source_folder}}/${{ inputs.solution_name }}
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_managed.zip
        solution-type: Unmanaged

    - name: Import solution as unmanaged to build env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{inputs.QA_ENVIRONMENT_URL}}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true
        convert-to-managed: true

    

    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-artifact@v3
      with:
        name: managedSolutions
        path: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_managed.zip

  release-to-prod:
    needs: [ release-to-qa ]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    
    - name: Download GH artifact
      uses: actions/download-artifact@v3
      with:
        name: managedSolutions
        path: ${{ inputs.solution_release_folder}}
    
    - name: Import solution to prod env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{inputs.PRODUCTION_ENVIRONMENT_URL}}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-file: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true
