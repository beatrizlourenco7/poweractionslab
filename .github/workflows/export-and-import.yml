name: export-and-import

on:
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default: ALMLab
       #Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions/
env:
  ENVIRONMENT_URL: 'https://org309e8f7e.crm.dynamics.com/'
  QA_ENVIRONMENT_URL: 'https://orgd0a5070f.crm.dynamics.com/'
  PRODUCTION_ENVIRONMENT_URL: 'https://orga2bd4cb8.crm.dynamics.com/'
  CLIENT_ID: 'c7485251-8ef9-4734-be4f-6e7359faef2a'
  TENANT_ID: '2ae11ddb-eeff-4ba6-8871-ebfc9f61160a'

jobs:
  export-from-dev:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}

    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
    
    - name: export-solution action as managed
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}_managed.zip
        managed: true
        
    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v0
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Unmanaged'
        overwrite-files: true
    
    - name: Upload solution to GH artifact store
      uses: actions/upload-artifact@v3
      with:
        name: managedSolutions
        path: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}_managed.zip
        
    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@v0
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true

  release-to-qa:
    needs: [ export-from-dev ]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - name: Download GH artifact
      uses: actions/download-artifact@v3
      with:
        name: managedSolutions
        path: out/release
    
    - name: Import solution to qa env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{env.QA_ENVIRONMENT_URL}}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-file: out/release/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true
    
  release-to-prod:
    needs: [ release-to-qa ]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - name: Download GH artifact
      uses: actions/download-artifact@v3
      with:
        name: managedSolutions
        path: out/release
    
    - name: Import solution to qa env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{env.PRODUCTION_ENVIRONMENT_URL}}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-file: out/release/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true
